/// Status codes for the health of Bitcoin canister
/// compared to other explorers.
type status_code = variant {
    /// Not enough data to calculate the health status.
    not_enough_data;

    /// Bitcoin canister height is healthy.
    ok;

    /// Bitcoin canister height is ahead
    /// of other explorers, might not be healthy.
    behind;

    /// Bitcoin canister height is behind
    /// other explorers, might not be healthy.
    ahead;
};

// The health status of the Bitcoin canister.
type health_status = record {
    /// Height of the block from the Bitcoin canister.
    source_height : opt nat64;

    /// Number of explorers inspected.
    other_number : nat64;

    /// Heights of the blocks from the explorers.
    other_heights : vec nat64;

    /// Target height calculated from the explorers.
    target_height : opt nat64;

    /// Difference between the source and the target heights.
    height_diff : opt int64;

    /// Status code of the Bitcoin canister health.
    status : status_code;
};

type config = record {
    /// Below this threshold, the canister is considered to be behind.
    blocks_behind_threshold : nat64;

    /// Above this threshold, the canister is considered to be ahead.
    blocks_ahead_threshold : nat64;

    /// The minimum number of explorers to compare against.
    min_explorers : nat64;

    /// Bitcoin canister endpoint.
    bitcoin_canister_endpoint : text;

    /// The number of seconds to wait before the first data fetch.
    delay_before_first_fetch_sec : nat64;

    /// The number of seconds to wait between all the other data fetches.
    interval_between_fetches_sec : nat64;
};

service : {
    /// Returns the health status of the Bitcoin canister.
    health_status : () -> (health_status) query;

    /// Returns the configuration of the watchdog canister.
    get_config : () -> (config) query;
};
