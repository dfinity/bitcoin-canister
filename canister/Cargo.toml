[package]
name = "ic-btc-canister"
version = "0.1.0"
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bitcoin = { workspace = true, features = ["use-serde"] }
# An optional dependency to benchmark parts of the code.
canbench-rs = { workspace = true, optional = true }
candid = { workspace = true }
ciborium = { workspace = true }
hex = { workspace = true }
ic-btc-interface = { workspace = true }
ic-btc-types = { workspace = true }
ic-btc-validation = { workspace = true }
ic-cdk = { workspace = true }
ic-cdk-macros = { workspace = true }
ic-metrics-encoder = { workspace = true }
ic-stable-structures = { workspace = true }
lazy_static = "1.4.0"
serde = { workspace = true }
serde_bytes = { workspace = true }

[[bin]]
name = "ic-btc-canister"
path = "src/main.rs"

# There are no benchmarks in the library itself, so by default it's turned off
# to avoid having `cargo bench` look for benchmarks there.
[lib]
bench = false

[dev-dependencies]
assert_matches = { workspace = true }
async-std = { version = "1.12.0", features = ["attributes"] }
bitcoin = { workspace = true, features = ["rand"] } # needed for generating secp256k1 keys.
byteorder = { workspace = true }
candid_parser = { workspace = true }
ic-btc-test-utils = { workspace = true }
ic-btc-types = { workspace = true, features = ["mock_difficulty"] }
maplit = "1.0.2"
pocket-ic = { workspace = true }
proptest = "0.9.4"
tempfile = { workspace = true }
test-strategy = "0.3.1"

[features]
file_memory = []
